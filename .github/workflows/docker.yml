name: Docker
on:
    repository_dispatch:
    workflow_dispatch:
    workflow_run:
        workflows: ['release']
        types:
            - completed
    push:
        branches:
            - main
        tags:
            - 'v*.*.*'
    pull_request:
        branches:
            - main

env:
    IMAGE_NAME: openpodcast/api
    DOCKER_PLATFORMS: linux/amd64,linux/arm64/v8
    DOCKERFILE: Dockerfile

jobs:
    build:
        runs-on: ubuntu-latest
        # Don't run on forks
        if: github.repository_owner == 'openpodcast' &&
            github.actor != 'dependabot[bot]' &&
            ( github.event_name != 'pull_request' || github.event.pull_request.head.repo.owner.login == github.event.pull_request.base.repo.owner.login )
        steps:
            - name: Checkout
              uses: actions/checkout@v3

            - name: Use Node.js 16.x
              uses: actions/setup-node@v3
              with:
                  node-version: 16.x

            - name: Install dependencies
              run: npm ci

            - name: Build
              run: npm run build

            - name: Docker meta
              id: meta
              uses: docker/metadata-action@v3
              with:
                  # list of Docker images to use as base name for tags
                  images: |
                      ${{ env.IMAGE_NAME }}
                  # generate Docker tags based on the following events/attributes
                  tags: |
                      type=schedule
                      type=ref,event=branch
                      type=ref,event=pr
                      type=semver,pattern={{version}}
                      type=semver,pattern={{major}}.{{minor}}
                      type=semver,pattern={{major}}
                      type=sha
                      # set latest tag for default branch
                      type=raw,value=latest,enable={{is_default_branch}}

            - name: Set up QEMU
              uses: docker/setup-qemu-action@v2

            - name: Set up Docker Buildx
              uses: docker/setup-buildx-action@v2

            - name: Login to DockerHub
              uses: docker/login-action@v2
              with:
                  username: ${{ secrets.DOCKER_USERNAME }}
                  password: ${{ secrets.DOCKER_PASSWORD }}

            - name: Get version
              id: get_version
              run: echo "version=$(git describe --tags --always --dirty 2>/dev/null || echo 'unknown')" >> $GITHUB_OUTPUT

            - name: Get build time
              id: get_build_time
              run: echo "build_time=$(date -u +%Y-%m-%dT%H:%M:%SZ)" >> $GITHUB_OUTPUT

            - name: Push Image
              uses: docker/build-push-action@v3
              with:
                  context: .
                  file: ${{ env.DOCKERFILE }}
                  platforms: ${{ env.DOCKER_PLATFORMS }}
                  push: ${{ github.event_name != 'pull_request' && github.actor != 'dependabot[bot]' }}
                  tags: ${{ steps.meta.outputs.tags }}
                  labels: ${{ steps.meta.outputs.labels }}
                  build-args: |
                      VERSION=${{ steps.get_version.outputs.version }}
                      BUILD_TIME=${{ steps.get_build_time.outputs.build_time }}
                      COMMIT_HASH=${{ github.sha }}

            - name: Update DockerHub description
              uses: peter-evans/dockerhub-description@v3
              with:
                  username: ${{ secrets.DOCKER_USERNAME }}
                  password: ${{ secrets.DOCKER_PASSWORD }}
                  repository: ${{ env.IMAGE_NAME }}
                  readme-filepath: README.md
